/*
This example is for downloading CSV generated by gulp-combine-languagefiles plugin
and updating original JSONs in your project.

WARNING: It'll override your JSONs. When testing, you should back up your JSONs
first to make sure irreversible happens.
*/

var download = require('gulp-download'),
   convert = require('gulp-convert'),
    fs = require('fs'),
    _ = require('lodash'),
    StringDecoder = require('string_decoder').StringDecoder;

var csvUrl = ''; // For example Google Sheets URL (File=>Download as=>CSV)
var appPath = 'src/app/'; // Root for your language files

gulp.task('update-translations', function() {
  var decoder = new StringDecoder('utf8');

  download(csvUrl)
    .pipe(convert({from: 'csv', to: 'json'}))
    .on('data', function(jsonString) {
      var translations = JSON.parse(decoder.write(jsonString.contents));

      var languageObj = [];

      for(index in translations) {
        for(key in translations[index]) {
          if(key !== 'Path' && key !== 'Key') {
            var keys = translations[index]['Key'].split('|');
            var k = keys.pop();
            var last;
            var obj = _.reduce(keys, function(result, item) {
              var appendTo = result;
              while (_.keys(appendTo).length) {
                appendTo = appendTo[_.keys(appendTo)[0]];
              }
              appendTo[item] = {};
              last = appendTo[item];
              return result;
            }, {});

            if(typeof last === 'object') {
              last[k] = translations[index][key];

              if(Object.keys(obj).length === 0) {
                obj[k] = last[k];
              }
            } else {
              obj[k] = translations[index][key];
            }

            if(!languageObj[translations[index].Path+key+'.json']) {
              languageObj[translations[index].Path+key+'.json'] = {};
            }

            _.merge(languageObj[translations[index].Path+key+'.json'], obj);
          }
        }
      }

      for(file in languageObj) {
        fs.writeFile(appPath+file, JSON.stringify(languageObj[file], null, 2), function(err) {
          if(err) {
            console.error(err);
          }
        });
      }
    })
  ;
});
